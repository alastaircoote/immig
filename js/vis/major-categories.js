// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["d3"], function(d3) {
    var MajorCategories;
    return MajorCategories = (function() {

      function MajorCategories(el) {
        this.el = el;
        this.loadData = __bind(this.loadData, this);

        this.svg = this.el.append("svg").attr("width", 600).attr("height", 500);
        this.loadData();
      }

      MajorCategories.prototype.loadData = function() {
        var _this = this;
        return d3.json("data/minors.json", function(err, json) {
          var bubble, diameter, force, node, tick;
          if (err) {
            throw err;
          }
          diameter = 10;
          json = json.map(function(a) {
            return {
              name: a.name,
              value: a.value,
              radius: a.value / 400,
              x: 250,
              y: 250
            };
          });
          tick = function() {
            return node.attr("transform", function(d) {
              return "translate(" + d.x + "," + d.y + ")";
            });
          };
          force = d3.layout.force().size([500, 500]).on("tick", tick).charge(function(d) {
            return -Math.pow(d.radius, 2.0) / 5;
          }).nodes(json);
          force.start();
          node = _this.svg.selectAll(".node").data(force.nodes());
          node.enter().append("g").attr("class", "node");
          node.append("circle").attr("r", function(d) {
            console.log(d);
            return d.radius;
          });
          return;
          bubble = d3.layout.pack().sort(function(a, b) {
            return a.name - b.name;
          }).size([600, 500]).padding(1.5);
          node = _this.svg.selectAll(".node").data(bubble.nodes({
            children: json
          }).filter(function(d) {
            return !d.children;
          })).enter().append("g").attr("class", "node").attr("transform", function(d) {
            console.log(d);
            return "translate(" + d.x + "," + d.y + ")";
          });
          node.append("circle").attr("r", function(d) {
            return d.r;
          });
          return node.append("text").attr("dy", ".3em").style("text-anchor", "middle").text(function(d) {
            return d.name;
          });
        });
      };

      return MajorCategories;

    })();
  });

}).call(this);
